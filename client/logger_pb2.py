# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: logger.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0clogger.proto\x12\x08protocol\"N\n\nLogMessage\x12\x0c\n\x04time\x18\x01 \x01(\t\x12\x10\n\x08severity\x18\x02 \x01(\r\x12\x0f\n\x07service\x18\x03 \x01(\t\x12\x0f\n\x07message\x18\x04 \x01(\t\"#\n\rWriteResponse\x12\x12\n\nStatusCode\x18\x01 \x01(\r\"0\n\x0bReadRequest\x12\x10\n\x08severity\x18\x02 \x01(\r\x12\x0f\n\x07service\x18\x03 \x01(\t\"F\n\x0cReadResponse\x12\x12\n\nStatusCode\x18\x01 \x01(\r\x12\"\n\x04logs\x18\x02 \x03(\x0b\x32\x14.protocol.LogMessage2w\n\x06Logger\x12\x36\n\x05Write\x12\x14.protocol.LogMessage\x1a\x17.protocol.WriteResponse\x12\x35\n\x04Read\x12\x15.protocol.ReadRequest\x1a\x16.protocol.ReadResponseB\x0bZ\t/protocolb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'logger_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z\t/protocol'
  _globals['_LOGMESSAGE']._serialized_start=26
  _globals['_LOGMESSAGE']._serialized_end=104
  _globals['_WRITERESPONSE']._serialized_start=106
  _globals['_WRITERESPONSE']._serialized_end=141
  _globals['_READREQUEST']._serialized_start=143
  _globals['_READREQUEST']._serialized_end=191
  _globals['_READRESPONSE']._serialized_start=193
  _globals['_READRESPONSE']._serialized_end=263
  _globals['_LOGGER']._serialized_start=265
  _globals['_LOGGER']._serialized_end=384
# @@protoc_insertion_point(module_scope)
